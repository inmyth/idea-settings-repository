package jp.hanatoya.ipcam.models;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

import jp.hanatoya.ipcam.cam.CamAPI;
import jp.hanatoya.ipcam.cam.PLANEXCSWMV043GNV;
import jp.hanatoya.ipcam.cam.PanasonicVLCM210;

/**
 * Entity mapped to table "CAM".
 */
public class Cam {

    private Long id;
    /** Not-null value. */
    private String type;
    /** Not-null value. */
    private String name;
    /** Not-null value. */
    private String host;
    /** Not-null value. */
    private String protocol = "http://";
    private int port;
    private String username;
    private String password;
    private Integer status;
    private byte[] snap;

    private CamAPI camAPI;

    public Cam() {
    }

    public Cam(Long id) {
        this.id = id;
    }

    public Cam(Long id, String type, String name, String host, String protocol, int port, String username, String password, Integer status, byte[] snap) {
        this.id = id;
        this.type = type;
        this.name = name;
        this.host = host;
        this.protocol = protocol;
        this.port = port;
        this.username = username;
        this.password = password;
        this.status = status;
        this.snap = snap;

        initAPI();

    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /** Not-null value. */
    public String getType() {
        return type;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setType(String type) {
        this.type = type;
    }

    /** Not-null value. */
    public String getName() {
        return name;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setName(String name) {
        this.name = name;
    }

    /** Not-null value. */
    public String getHost() {
        return host;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setHost(String host) {
        this.host = host;
    }

    /** Not-null value. */
    public String getProtocol() {
        return protocol;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setProtocol(String protocol) {
        this.protocol = protocol;
    }

    public int getPort() {
        return port;
    }

    public void setPort(int port) {
        this.port = port;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public byte[] getSnap() {
        return snap;
    }

    public void setSnap(byte[] snap) {
        this.snap = snap;
    }

    public void initAPI(){ // Match these with string resource
        if(this.type.equals("Panasonic VL-CM210")){
            camAPI = new PanasonicVLCM210();
        }else if (this.type.equals("Planex CS-WMV043G-NV")){
            camAPI = new PLANEXCSWMV043GNV();
        }
    }

    public String getStreamUrl(){
        StringBuffer sb = buildUrl();
        sb.append(camAPI.getPath());
        return sb.toString();
    }

    public String getUpUrl(){
        StringBuffer sb = buildUrl();
        sb.append(camAPI.up());
        return sb.toString();
    }

    public String getDownUrl(){
        StringBuffer sb = buildUrl();
        sb.append(camAPI.down());
        return sb.toString();
    }

    public String getLeftUrl(){
        StringBuffer sb = buildUrl();
        sb.append(camAPI.left());
        return sb.toString();
    }

    public String getRightUrl(){
        StringBuffer sb = buildUrl();
        sb.append(camAPI.right());
        return sb.toString();
    }

    public String getCenterUrl(){
        StringBuffer sb = buildUrl();
        sb.append(camAPI.center());
        return sb.toString();
    }

    private StringBuffer buildUrl(){
        StringBuffer sb = new StringBuffer(this.getProtocol());
        sb.append(this.getHost());
        sb.append(":");
        sb.append(this.port);
        return sb;
    }
}
